apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

//apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.gjdl.carameaccept"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    sourceSets {
//        main {
//            // 定义proto文件目录
//            proto {
//                srcDir 'src/main/proto'
//                include '**/*.proto'
//            }
//        }
//    }

//    externalNativeBuild {
//        cmake {
//            path '../CMakeLists.txt'
//        }
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.yanzhenjie:andserver:1.1.4'
    implementation project(':openCVLibrary')
    //    compile "com.google.protobuf:protobuf-lite:3.0.0"
    //    compile ('com.squareup.retrofit2:converter-protobuf:2.2.0') {
    //        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    //    }
    implementation 'com.google.protobuf:protobuf-java:3.6.0'

    implementation 'com.github.vilyever:AndroidSocketClient:3.0.3'
    implementation fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')
}


task nativeLibsToJar(type: Jar, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    from fileTree(dir: 'libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}
